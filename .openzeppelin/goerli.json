{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x1C3A7f0fdbFDbb5aF19E4619Cb3483A32b1E0769",
      "txHash": "0x55aa3e1d854fd8777e717474963d0ce0d353eecb3baed25c9dedd8be89c321e3",
      "kind": "uups"
    }
  ],
  "impls": {
    "968e8a89700a99cb1d1fdfaa22e5a414f994789135e371ae3083cccdbb9dd367": {
      "address": "0x334fDf1d97d11a3246b9630d2eA859d2Bf025A3D",
      "txHash": "0x62ddee3fb45fa01df70b10c6f5028c2d4559043f4a2ac6927dda3c40ccd1c867",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "IBLOXXToken",
            "src": "contracts/IBLOXXToken.sol:15"
          },
          {
            "label": "_tokenData",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(TokenData)5066_storage",
            "contract": "IBLOXXToken",
            "src": "contracts/IBLOXXToken.sol:23"
          },
          {
            "label": "_tokens",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(TokenData)5066_storage)",
            "contract": "IBLOXXToken",
            "src": "contracts/IBLOXXToken.sol:25"
          },
          {
            "label": "_tokenOwner",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "IBLOXXToken",
            "src": "contracts/IBLOXXToken.sol:26"
          },
          {
            "label": "_tokenPrices",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "IBLOXXToken",
            "src": "contracts/IBLOXXToken.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)390_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)245_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(TokenData)5066_storage)": {
            "label": "mapping(uint256 => struct IBLOXXToken.TokenData)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenData)5066_storage": {
            "label": "struct IBLOXXToken.TokenData",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "owner",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a010bb976557991f5cb568bffec3edb03a1394f9e38cd4d440d5f90c61606cee": {
      "address": "0xad79cf7440B129643D707Fe4eBb20ee83F8589c6",
      "txHash": "0x615bb4593a2c960ef16e14807ca771a2fbdaa5f9cf8b73790fdb2ae16f324026",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "iBloxxNftContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC721)5420",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:30"
          },
          {
            "label": "iBloxxNftContractAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:31"
          },
          {
            "label": "_iBloxxTokenData",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(TokenData)5364_storage",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:32"
          },
          {
            "label": "nftData",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(NFTData)5460_storage",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:48"
          },
          {
            "label": "_nftsForAuctionList",
            "offset": 0,
            "slot": "15",
            "type": "t_array(t_struct(NFTData)5460_storage)dyn_storage",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:57"
          },
          {
            "label": "_nftsFixedPriceList",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_struct(NFTData)5460_storage)dyn_storage",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:58"
          },
          {
            "label": "_nfts",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_struct(NFTData)5460_storage)",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:60"
          },
          {
            "label": "_tokenPrices",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:61"
          },
          {
            "label": "_nftBiddersList",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:62"
          },
          {
            "label": "allBidsOfBidder",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:63"
          },
          {
            "label": "_highestBid",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:64"
          },
          {
            "label": "_highestBidder",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:65"
          },
          {
            "label": "_auctionNFTs",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_uint256,t_array(t_struct(NFTData)5460_storage)dyn_storage)",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:66"
          },
          {
            "label": "_ficedPriceNFTs",
            "offset": 0,
            "slot": "24",
            "type": "t_mapping(t_uint256,t_array(t_struct(NFTData)5460_storage)dyn_storage)",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:67"
          },
          {
            "label": "biddersCollaterals",
            "offset": 0,
            "slot": "25",
            "type": "t_mapping(t_uint256,t_array(t_struct(CollateralData)5470_storage)dyn_storage)",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:68"
          },
          {
            "label": "biddersOfNftListByAddress",
            "offset": 0,
            "slot": "26",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "MarketPlace",
            "src": "contracts/MarketPlace.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CollateralData)5470_storage)dyn_storage": {
            "label": "struct MarketPlace.CollateralData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NFTData)5460_storage)dyn_storage": {
            "label": "struct MarketPlace.NFTData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC721)5420": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(CollateralData)5470_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct MarketPlace.CollateralData[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NFTData)5460_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct MarketPlace.NFTData[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTData)5460_storage)": {
            "label": "mapping(uint256 => struct MarketPlace.NFTData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CollateralData)5470_storage": {
            "label": "struct MarketPlace.CollateralData",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(NFTData)5460_storage": {
            "label": "struct MarketPlace.NFTData",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "forAuction",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionEndTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "auctionStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "auctionEnded",
                "type": "t_bool",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "highestBidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(TokenData)5364_storage": {
            "label": "struct IERC721.TokenData",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
